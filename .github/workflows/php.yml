name: PHP

on:
  push:
    branches-ignore: [master]

jobs:
  tests:
    name: Tests

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: arbor_tests
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none

      - name: Get Composer cache directory path
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: Install Composer dependencies
        run: composer install

      - name: Prepare Laravel application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Execute tests
        run: vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_PASSWORD: ''
  
  types:
    name: Types

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none

      - name: Get Composer cache directory path
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: PHPStan cache
        uses: actions/cache@v4
        with:
          path: .cache/phpstan
          key: phpstan-${{ github.sha }}
          restore-keys: phpstan-

      - name: Install Composer dependencies
        run: composer install

      - name: Prepare Laravel application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Run PHPStan
        run: vendor/bin/phpstan analyze --no-progress --no-interaction
        
  style:
    name: Style

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none

      - name: Get Composer cache directory path
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: PHP-CS-Fixer cache
        uses: actions/cache@v4
        with:
          path: .cache/.php-cs-fixer.cache
          key: php-cs-fixer-${{ github.sha }}
          restore-keys: php-cs-fixer-

      - name: Install Composer dependencies
        run: composer install

      - name: Run PHP-CS-Fixer
        run: PHP_CS_FIXER_IGNORE_ENV=1 vendor/bin/php-cs-fixer fix --dry-run --diff --no-interaction
