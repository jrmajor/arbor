CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "username" varchar not null, "email" varchar, "password" varchar not null, "permissions" integer not null default '0', "remember_token" varchar, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE INDEX "users_username_index" on "users" ("username");
CREATE INDEX "users_email_index" on "users" ("email");
CREATE UNIQUE INDEX "users_username_unique" on "users" ("username");
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime);
CREATE INDEX "password_resets_email_index" on "password_reset_tokens" ("email");
CREATE TABLE IF NOT EXISTS "telescope_entries" ("sequence" integer primary key autoincrement not null, "uuid" varchar not null, "batch_id" varchar not null, "family_hash" varchar, "should_display_on_index" tinyint(1) not null default '1', "type" varchar not null, "content" text not null, "created_at" datetime);
CREATE UNIQUE INDEX "telescope_entries_uuid_unique" on "telescope_entries" ("uuid");
CREATE INDEX "telescope_entries_batch_id_index" on "telescope_entries" ("batch_id");
CREATE INDEX "telescope_entries_family_hash_index" on "telescope_entries" ("family_hash");
CREATE INDEX "telescope_entries_created_at_index" on "telescope_entries" ("created_at");
CREATE INDEX "telescope_entries_type_should_display_on_index_index" on "telescope_entries" ("type", "should_display_on_index");
CREATE TABLE IF NOT EXISTS "telescope_entries_tags" ("entry_uuid" varchar not null, "tag" varchar not null, foreign key("entry_uuid") references "telescope_entries"("uuid") on delete cascade, primary key ("entry_uuid", "tag"));
CREATE INDEX "telescope_entries_tags_tag_index" on "telescope_entries_tags" ("tag");
CREATE TABLE IF NOT EXISTS "telescope_monitoring" ("tag" varchar not null, primary key ("tag"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE TABLE IF NOT EXISTS "activity_log" ("id" integer primary key autoincrement not null, "log_name" varchar, "description" text not null, "subject_id" integer, "subject_type" varchar, "causer_id" integer, "causer_type" varchar, "properties" text, "created_at" datetime, "updated_at" datetime, "event" varchar, "batch_uuid" varchar);
CREATE INDEX "activity_log_log_name_index" on "activity_log" ("log_name");
CREATE INDEX "subject" on "activity_log" ("subject_id", "subject_type");
CREATE INDEX "causer" on "activity_log" ("causer_id", "causer_type");
CREATE TABLE people (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, mother_id INTEGER DEFAULT NULL, father_id INTEGER DEFAULT NULL, id_wielcy VARCHAR(255) DEFAULT NULL, id_pytlewski INTEGER DEFAULT NULL, sex VARCHAR(255) DEFAULT NULL, name VARCHAR(255) NOT NULL, middle_name VARCHAR(255) DEFAULT NULL, family_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) DEFAULT NULL, birth_place VARCHAR(255) DEFAULT NULL, dead BOOLEAN DEFAULT 0 NOT NULL, death_place VARCHAR(255) DEFAULT NULL, death_cause VARCHAR(255) DEFAULT NULL, funeral_place VARCHAR(255) DEFAULT NULL, burial_place VARCHAR(255) DEFAULT NULL, visibility BOOLEAN DEFAULT 0 NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, birth_date_from DATE DEFAULT NULL, birth_date_to DATE DEFAULT NULL, death_date_from DATE DEFAULT NULL, death_date_to DATE DEFAULT NULL, funeral_date_from DATE DEFAULT NULL, funeral_date_to DATE DEFAULT NULL, burial_date_from DATE DEFAULT NULL, burial_date_to DATE DEFAULT NULL, "sources" text, "biography" varchar, FOREIGN KEY (mother_id) REFERENCES people (id) ON UPDATE NO ACTION ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE, FOREIGN KEY (father_id) REFERENCES people (id) ON UPDATE NO ACTION ON DELETE NO ACTION NOT DEFERRABLE INITIALLY IMMEDIATE);
CREATE INDEX people_id_pytlewski_index ON people (id_pytlewski);
CREATE INDEX people_mother_id_index ON people (mother_id);
CREATE INDEX people_father_id_index ON people (father_id);
CREATE TABLE marriages (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, woman_id INTEGER NOT NULL, woman_order INTEGER DEFAULT NULL, man_id INTEGER NOT NULL, man_order INTEGER DEFAULT NULL, rite VARCHAR(255) DEFAULT NULL COLLATE "BINARY", first_event_type VARCHAR(255) DEFAULT NULL COLLATE "BINARY", first_event_place VARCHAR(255) DEFAULT NULL COLLATE "BINARY", second_event_type VARCHAR(255) DEFAULT NULL COLLATE "BINARY", second_event_place VARCHAR(255) DEFAULT NULL COLLATE "BINARY", divorced BOOLEAN DEFAULT 0 NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, first_event_date_from DATE DEFAULT NULL, first_event_date_to DATE DEFAULT NULL, second_event_date_from DATE DEFAULT NULL, second_event_date_to DATE DEFAULT NULL, divorce_date_from DATE DEFAULT NULL, divorce_date_to DATE DEFAULT NULL, divorce_place VARCHAR(255) DEFAULT NULL COLLATE "BINARY");
CREATE INDEX pair ON marriages (woman_id, man_id);
CREATE INDEX marriages_man_id_index ON marriages (man_id);
CREATE INDEX marriages_woman_id_index ON marriages (woman_id);
INSERT INTO migrations VALUES(1,'2014_10_12_000000_create_users_table',1);
INSERT INTO migrations VALUES(2,'2014_10_12_100000_create_password_resets_table',1);
INSERT INTO migrations VALUES(3,'2019_07_26_005625_create_people_table',1);
INSERT INTO migrations VALUES(4,'2019_07_26_132055_create_marriages_table',1);
INSERT INTO migrations VALUES(5,'2019_08_19_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(6,'2020_01_25_202653_create_activity_log_table',1);
INSERT INTO migrations VALUES(7,'2020_05_04_191012_add_date_tuples',2);
INSERT INTO migrations VALUES(8,'2020_05_05_044134_remove_unused_date_columns',3);
INSERT INTO migrations VALUES(9,'2020_05_08_191147_change_column_type_from_int_to_bool',4);
INSERT INTO migrations VALUES(10,'2020_05_16_234550_add_users_soft_deletes',5);
INSERT INTO migrations VALUES(11,'2020_05_25_140710_add_sources_field',6);
INSERT INTO migrations VALUES(12,'2020_06_08_001334_rename_divorce_columns',7);
INSERT INTO migrations VALUES(13,'2020_06_08_013654_drop_divorce_cause_column',8);
INSERT INTO migrations VALUES(14,'2020_06_24_154726_add_biography_to_people_table',9);
INSERT INTO migrations VALUES(15,'2020_09_12_153005_update_morphs_to_new_models_directory',10);
INSERT INTO migrations VALUES(16,'2018_08_08_100000_create_telescope_entries_table',11);
INSERT INTO migrations VALUES(17,'2021_05_09_180017_add_event_column_to_activity_log_table',12);
INSERT INTO migrations VALUES(18,'2021_05_09_180018_add_batch_uuid_column_to_activity_log_table',12);
INSERT INTO migrations VALUES(19,'2021_09_11_103810_add_morph_map',13);
INSERT INTO migrations VALUES(20,'2023_02_26_171007_rename_password_resets_table',14);
